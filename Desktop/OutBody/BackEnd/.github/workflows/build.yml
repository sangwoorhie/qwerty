name: build

on:
  pull_request:
    branches: [main]

jobs:
  build-check:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.17.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: ✅ 체크아웃 source code.
        uses: actions/checkout@v3
      - name: ⚙️ ${{ matrix.node-version }} 버전의 노드로 세팅합니다.
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: ⚙️ 환경변수를 설정합니다.
        working-directory: ./
        env:
          DATABASE_HOST: ${{secrets.DATABASE_HOST}}
          DATABASE_PORT: ${{secrets.DATABASE_PORT}}
          DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
          DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          DATABASE_NAME: ${{secrets.DATABASE_NAME}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          JWT_ACCESS_TOKEN_SECRET: ${{secrets.JWT_ACCESS_TOKEN_SECRET}}
          JWT_ACCESS_TOKEN_EXPIRATION_TIME: ${{secrets.JWT_ACCESS_TOKEN_EXPIRATION_TIME}}
          JWT_REFRESH_TOKEN_SECRET: ${{secrets.JWT_REFRESH_TOKEN_SECRET}}
          JWT_REFRESH_TOKEN_EXPIRATION_TIME: ${{secrets.JWT_REFRESH_TOKEN_EXPIRATION_TIME}}
          PORT: ${{secrets.PORT}}
          CORS_PORT: ${{secrets.CORS_PORT}}
          AWS_S3_ACCESS_KEY: ${{secrets.AWS_S3_ACCESS_KEY}}
          AWS_S3_SECRET_KEY: ${{secrets.AWS_S3_SECRET_KEY}}
          AWS_S3_REGION: ${{secrets.AWS_S3_REGION}}
          AWS_S3_BUCKET_NAME: ${{secrets.AWS_S3_BUCKET_NAME}}
          SECRET_KEY: ${{secrets.SECRET_KEY}}
          NODEMAILER_USER: ${{secrets.NODEMAILER_USER}}
          NODEMAILER_PASS: ${{secrets.NODEMAILER_PASS}}
          GOOGLE_ID: ${{secrets.GOOGLE_ID}}
          GOOGLE_PW: ${{secrets.GOOGLE_PW}}
          GOOGLE_REDIRECT: ${{secrets.GOOGLE_REDIRECT}}
          KAKAO_ID: ${{secrets.KAKAO_ID}}
          KAKAO_PW: ${{secrets.KAKAO_PW}}
          KAKAO_REDIRECT: ${{secrets.KAKAO_REDIRECT}}
          TOKEN: ${{secrets.TOKEN}}
        run: |
          pwd
          touch .env
          echo "DATABASE_HOST=$DATABASE_HOST" >> .env
          echo "DATABASE_PORT=$DATABASE_PORT" >> .env
          echo "DATABASE_USERNAME=$DATABASE_USERNAME" >> .env
          echo "DATABASE_PASSWORD=$DATABASE_PASSWORD" >> .env
          echo "DATABASE_NAME=$DATABASE_NAME" >> .env
          echo "DATABASE_URL=DATABASE_URL" >> .env
          echo "JWT_ACCESS_TOKEN_SECRET=$JWT_ACCESS_TOKEN_SECRET" >> .env
          echo "JWT_ACCESS_TOKEN_EXPIRATION_TIME=$JWT_ACCESS_TOKEN_EXPIRATION_TIME" >> .env
          echo "JWT_REFRESH_TOKEN_SECRET=$JWT_REFRESH_TOKEN_SECRET" >> .env
          echo "JWT_REFRESH_TOKEN_EXPIRATION_TIME=$JWT_REFRESH_TOKEN_EXPIRATION_TIME" >> .env
          echo "PORT=$PORT" >> .env
          echo "CORS_PORT=$CORS_PORT" >> .env
          echo "AWS_S3_ACCESS_KEY=$AWS_S3_ACCESS_KEY" >> .env
          echo "AWS_S3_SECRET_KEY=$AWS_S3_SECRET_KEY" >> .env
          echo "AWS_S3_REGION=$AWS_S3_REGION" >> .env
          echo "AWS_S3_BUCKET_NAME=$AWS_S3_BUCKET_NAME" >> .env
          echo "SECRET_KEY=$SECRET_KEY" >> .env
          echo "NODEMAILER_USER=$NODEMAILER_USER" >> .env
          echo "NODEMAILER_PASS=$NODEMAILER_PASS" >> .env
          echo "GOOGLE_ID=$GOOGLE_ID" >> .env
          echo "GOOGLE_PW=$GOOGLE_PW" >> .env
          echo "GOOGLE_REDIRECT=$GOOGLE_REDIRECT" >> .env
          echo "KAKAO_ID=$KAKAO_ID" >> .env
          echo "KAKAO_PW=$KAKAO_PW" >> .env
          echo "KAKAO_REDIRECT=$KAKAO_REDIRECT" >> .env
          echo "TOKEN=$TOKEN" >> .env
          cat .env

      - name: ✨ 패키지 설치
        working-directory: ./
        run: npm i

      - name: ✨ 빌드 과정을 시작
        working-directory: ./
        run: npm run build
